const getNewNode = (
  id: string,
  title: string,
  refDatabaseId: string,
  lastNode: any,
) => {
  let nodeObject = {
    id,
    type: 'customNode',
    position: {
      x: lastNode ? lastNode.position.x + 300 : 300,
      y: 50,
    },
    data: [
      {
        displayPropertyName: null,
        propertyName: 'elementType',
        propertyValue: 'entity',
        formType: null,
        visible: false,
        readonly: false,
      },
      {
        displayPropertyName: 'Title',
        propertyName: 'name',
        propertyValue: title,
        formType: 'input',
        visible: true,
        readonly: false,
      },
      {
        displayPropertyName: 'Key Type',
        propertyName: 'keyType',
        propertyValue: 'int',
        formType: 'select',
        visible: true,
        readonly: false,
      },
      {
        displayPropertyName: null,
        propertyName: 'entityType',
        propertyValue: 'Auditable',
        formType: 'input',
        visible: false,
        readonly: false,
      },
      {
        displayPropertyName: null,
        propertyName: 'refDatabaseId',
        propertyValue: refDatabaseId,
        formType: null,
        visible: false,
        readonly: false,
      },
      {
        displayPropertyName: 'Properties',
        propertyName: 'properties',
        propertyValue: [
          [
            {
              displayPropertyName: 'Title',
              propertyName: 'name',
              propertyValue: 'Id',
              formType: 'input',
              visible: true,
              readonly: false,
            },
            {
              displayPropertyName: 'Type',
              propertyName: 'type',
              propertyValue: 'int',
              formType: 'select',
              visible: true,
              readonly: false,
            },
            {
              displayPropertyName: 'Is Array?',
              propertyName: 'isArray',
              propertyValue: false,
              formType: 'checkbox',
              visible: true,
              readonly: false,
            },
            {
              displayPropertyName: 'Is Nullable?',
              propertyName: 'isNullable',
              propertyValue: false,
              formType: 'checkbox',
              visible: true,
              readonly: false,
            },
            {
              displayPropertyName: 'Default Value',
              propertyName: 'defaultValue',
              propertyValue: null,
              formType: 'input',
              visible: true,
              readonly: false,
            },
            {
              displayPropertyName: 'Check Exists Referenced Entity',
              propertyName: 'checkReferencedEntityId',
              propertyValue: null,
              formType: 'checkbox',
              visible: true,
              readonly: true,
            },
          ],
          [
            {
              displayPropertyName: 'Title',
              propertyName: 'name',
              propertyValue: 'CreatedUtc',
              formType: 'input',
              visible: true,
              readonly: true,
            },
            {
              displayPropertyName: 'Type',
              propertyName: 'type',
              propertyValue: 'DateTimeOffset',
              formType: 'select',
              visible: true,
              readonly: true,
            },
            {
              displayPropertyName: 'Is Array?',
              propertyName: 'isArray',
              propertyValue: false,
              formType: 'checkbox',
              visible: true,
              readonly: true,
            },
            {
              displayPropertyName: 'Is Nullable?',
              propertyName: 'isNullable',
              propertyValue: false,
              formType: 'checkbox',
              visible: true,
              readonly: true,
            },
            {
              displayPropertyName: 'Default Value',
              propertyName: 'defaultValue',
              propertyValue: null,
              formType: 'input',
              visible: true,
              readonly: true,
            },
            {
              displayPropertyName: 'Check Exists Referenced Entity',
              propertyName: 'checkReferencedEntityId',
              propertyValue: null,
              formType: 'checkbox',
              visible: true,
              readonly: true,
            },
          ],
          [
            {
              displayPropertyName: 'Title',
              propertyName: 'name',
              propertyValue: 'ModifiedUtc',
              formType: 'input',
              visible: true,
              readonly: true,
            },
            {
              displayPropertyName: 'Type',
              propertyName: 'type',
              propertyValue: 'DateTimeOffset',
              formType: 'select',
              visible: true,
              readonly: true,
            },
            {
              displayPropertyName: 'Is Array?',
              propertyName: 'isArray',
              propertyValue: false,
              formType: 'checkbox',
              visible: true,
              readonly: true,
            },
            {
              displayPropertyName: 'Is Nullable?',
              propertyName: 'isNullable',
              propertyValue: false,
              formType: 'checkbox',
              visible: true,
              readonly: true,
            },
            {
              displayPropertyName: 'Default Value',
              propertyName: 'defaultValue',
              propertyValue: null,
              formType: 'input',
              visible: true,
              readonly: true,
            },
            {
              displayPropertyName: 'Check Exists Referenced Entity',
              propertyName: 'checkReferencedEntityId',
              propertyValue: null,
              formType: 'checkbox',
              visible: true,
              readonly: true,
            },
          ],
        ],
        formType: null,
        visible: false,
        readonly: false,
      },
    ],
    style: {
      border: '1px solid #777',
      padding: 10,
    },
  };

  return nodeObject;
};
export default getNewNode;
